import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id 'antlr'
    id 'com.vanniktech.maven.publish' version "$mavenPublish"
}

dependencies {
    antlr "org.antlr:antlr4:$antlr"
    implementation "org.antlr:antlr4-runtime:$antlr"

    implementation "org.jooq:joor:$joor"
    implementation "io.github.classgraph:classgraph:$classgraph"

    implementation "io.github.palexdev:jresolve:$jresolve"
}

generateGrammarSource {
    arguments += ['-no-listener', '-package', 'io.github.palexdev.architectfx.backend.jui']
}

java {
    tasks.withType(Jar).each { it.archiveBaseName.set("architectfx") }
}

javafx {
    modules = ['javafx.controls']
}

test {
    jvmArgs += [
            '--add-exports', 'javafx.graphics/com.sun.javafx.application=ALL-UNNAMED'
    ]
}

tasks.register('testRun', JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    mainClass = 'app.Launcher'
}

sourcesJar.dependsOn(generateGrammarSource)

configurations {
    // Remove vanniktech non-sense
    gradle.taskGraph.whenReady { graph ->
        if (graph.hasTask(plainJavadocJar)) {
            plainJavadocJar.enabled = false
        }
    }
}

mavenPublishing {
    publishToMavenCentral(SonatypeHost.S01)
    signAllPublications()
}